@model GLSOverviewWeb.Models.employee

@{
    ViewBag.Title = "Edit Employee";
}

<h2>Edit Employee <small>- @Model.Name</small></h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.EmpNo, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-11">
                @Html.EditorFor(model => model.EmpNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-11">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Admin, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-11">
                <!--@Html.EditorFor(model => model.Admin, "", new { @class = "checkbox" })-->
                @Html.EditorFor(model => model.Admin, new { htmlAttributes = new { @onclick = "EnablePassword(this)", @class = "checkbox" } })
                @Html.ValidationMessageFor(model => model.Admin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-1" })
            <div class="col-md-11">
                @if (Model.Admin)
                {
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "password", @type = "password" } })
                }
                else
                {
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "password", @disabled = "true" } })
                }
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-11 col-md-offset-1">
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                <input type="submit" value="Save Changes" class="btn btn-primary active"/>
            </div>
        </div>
    </div>
}

<script>
    EnablePassword = function (val) {
        var psswrd = document.getElementById("password");

        if (val.checked == true) {
            psswrd.disabled = false;
        }
        else {
            psswrd.disabled = true;
            psswrd.value = '';
        }
    }
</script>
